import { nanoid } from 'nanoid'

const htmlProject = [
    {
        id: nanoid(),
        name: '快打旋風V角色表',
        img1: require('../img/sfv-1.jpg'),
        img2: require('../img/sfv-2.jpg'),
        point: 'HTML、CSS',
        content: '這是我的第一個作品，因為很喜歡快打旋風所以做了一個角色表，裡面包含五代所有角色故事以及相關訊息。由於是第一個作品，所以是為了讓我能夠熟悉 html 結構和 css 語法',
        url: 'https://bdk27.github.io/SFV/',
        slide: true,
    },
    {
        id: nanoid(),
        name: '台灣彩券(改造)',
        img1: require('../img/taiwanLottery.jpg'),
        point: 'HTML、CSS',
        content: '在找練習的時候，無意間看到台灣運彩的網站，覺得網站設計的不好看自己可以設計更好，剛好還沒完全熟悉 html 和 css ，所以決定做一個出來看看，內容主要也是以 html 結構跟設定 css 為主',
        url: 'https://bdk27.github.io/TaiwanLottery/',
        slide: false,
    },
    {
        id: nanoid(),
        name: '星巴克',
        img1: require('../img/starbucks.jpg'),
        point: 'RWD、JavaScript',
        content: '經過前面的練習後，我決定嘗試用星巴克的網站做練習，因為它的網站首頁大多是圖片比較簡單，所以決定看著它臨摹並且練習 RWD ，不僅如此也嘗試使用 js 做了導覽列',
        url: 'https://bdk27.github.io/starbucks/',
        slide: false,
    },
    {
        id: nanoid(),
        name: '曜健身運動館',
        img1: require('../img/sunlight.jpg'),
        point: 'HTML、CSS、JavaScript',
        content: '本身對於健身很有興趣，這間是我大學時期去的健身房，但因為它們只能用 line 或 facebook 聯絡，並沒有一個專門的網站，所以我嘗試使用當時所學的技巧來做出來網頁來',
        url: 'https://bdk27.github.io/sunlight-gym/',
        slide: false,
    }
]
const vueProject = [
    {
        id: nanoid(),
        name: '線上隨機產生用戶資訊',
        img1: require('../img/user-1.jpg'),
        img2: require('../img/user-2.jpg'),
        point: 'Vue',
        content: '嘗試使用 vue 框架來寫出網頁，選擇 option api 來試做。透過 fetch 來請求 random user 回傳人物資料，並且設定按鈕來切換淺色或深色背景，而這次練習也算是為了能更加熟悉整個 vue 的環境',
        url: 'https://bdk27.github.io/vue-user/',
        slide: true,
    },
    {
        id: nanoid(),
        name: 'TShop - 電商網站',
        img1: require('../img/tshop-1.jpg'),
        img2: require('../img/tshop-2.jpg'),
        point: 'Vue CLI、Vue Router、mitt',
        content: '首次使用 cli 來做出網站，只要點擊購物車按鈕，就會使用 mitt 來傳送資料到 nav 組件，之後靠 router 來傳送資料到結帳頁面，在結帳頁面中可以調整數量，並即時計算費用',
        url: 'https://bdk27.github.io/vue_tshop/',
        slide: true,
    },
    {
        id: nanoid(),
        name: '登入頁面',
        img1: require('../img/login-1.jpg'),
        img2: require('../img/login-2.jpg'),
        point: 'Composition API、localStorage、SCSS',
        content: '首次使用 composition api 和 scss 來做出網頁，首先先到註冊帳號頁面來註冊帳號密碼，並且有圖形驗證機制，之後透過 localstorage 來儲存帳號密碼。最後再回到首頁進行登入',
        url: 'https://bdk27.github.io/vue_login/',
        slide: true,
    },
    {
        id: nanoid(),
        name: 'CARent - 租車網',
        img1: require('../img/carent-1.jpg'),
        img2: require('../img/carent-2.jpg'),
        img3: require('../img/carent-3.jpg'),
        point: 'Bootstrap、Props、Pinia',
        content: '這次網站嘗試使用 bootstrap 來做，點擊立即租車或右邊的車子按鈕進入到預約租車的頁面，選擇時間和地點後按下提交表單，之後按下查看車款就會出現一系列車款供你選擇，選定車款後點擊我要預約就會轉到輸入資料的頁面，並且會對日期和價錢自動進行計算',
        url: 'https://bdk27.github.io/vue_carental_v2/',
        slide: true,
    },
    {
        id: nanoid(),
        name: '蛋白盒子(改造)',
        img1: require('../img/proteinbox.jpg'),
        point: 'Vite',
        content: '首次用 vite 進行開發，能明顯感受到與 cli 的差別，不僅速度快而且還方便。這次主題選擇蛋白盒子是因為平常我很喜歡吃這家店，看到它們網站後想要改變一下樣貌，所以決定拿它試一試',
        url: 'https://bdk27.github.io/vite_proteinbox/',
        slide: false,
    },
    {
        id: nanoid(),
        name: '血壓紀錄表',
        img1: require('../img/HTN.jpg'),
        point: 'TypeScript',
        content: '平時血壓偏高所以有每天測量的習慣，順便做個紀錄表來監控我的血壓，而因為表格結構類似 todolist ，內容有新增、編輯等功能相較不複雜，所以利用此次來練習 typescript 開發',
        url: 'https://bdk27.github.io/vite_HTN/',
        slide: false,
    },
    {
        id: nanoid(),
        name: 'Edu-線上教育平台',
        img1: require('../img/edu.jpg'),
        point: 'Tailwind CSS',
        content: '這次嘗試使用 tailwind 來製作網頁，使用了一些模板再稍微修改，跟 bootstrap 相比難度感覺比較高，而且也還沒習慣都使用 class 來寫樣式，但是我相信熟練以後會覺得很方便',
        url: 'https://bdk27.github.io/vite_education/',
        slide: false,
    },
    {
        id: nanoid(),
        name: 'TMOV - 電影平台',
        img1: require('../img/tmov-1.png'),
        img2: require('../img/tmov-2.png'),
        point: '獲取 API 請求',
        content: '從 TMDB 網站獲取 API 資料，透過 pinia 將資料儲存起來，再利用 vue-router 來跳轉頁面並傳遞參數，實現不同公司所呈現出不同的電影及影集。而這次困難的點是如何設定參數得到想要的資料，以及如何獲取將資料並完整呈現出來',
        url: 'https://bdk27.github.io/vite_tmov/',
        slide: true,
    },
]

export { htmlProject, vueProject }